plugins {
    id 'groovy'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.2'
}

sourceCompatibility = JavaVersion.VERSION_1_6
targetCompatibility = JavaVersion.VERSION_1_6

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.3.10'
    compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'com.jcraft:jsch:0.1.52'
    compile 'com.jcraft:jsch.agentproxy.connector-factory:0.0.7'
    compile 'com.jcraft:jsch.agentproxy.jsch:0.0.7'

    testCompile 'org.spockframework:spock-core:1.0-groovy-2.3'
    testRuntime 'cglib:cglib-nodep:3.1'
    testRuntime 'org.objenesis:objenesis:2.1'
}

processResources {
    filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: ['version': project.version])
}

task javadocJar(type: Jar, dependsOn: groovydoc) {
    from "${buildDir}/docs/groovydoc"
    classifier = 'javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            final github = 'https://github.com/int128/groovy-ssh'
            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = DELEGATE_FIRST
                    name project.name
                    description project.description
                    url github
                    scm {
                        url "${github}.git"
                        connection "scm:git:${github}.git"
                    }
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'int128'
                            name 'int128'
                        }
                    }
                }
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER') ?: project.properties.bintrayUser
    key  = System.getenv('BINTRAY_KEY')  ?: project.properties.bintrayKey
    publications = ['maven']
    pkg {
        repo = 'maven'
        name = project.name
    }
}

tasks.bintrayUpload.doFirst {
    assert !project.version.contains('SNAPSHOT')
}
